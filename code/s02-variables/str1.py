# -*- coding: utf-8 -*-
"""
Created on Tue Jan 23 10:01:37 2024

@author: YONSAI
"""
#%%

"""
부동 소수점 / 실수 포맷
"""

echo= 2.245456
print ("올해의 경제성장률은 %f 입니다." %echo)
print ("올해의 경제성장률은 %d 입니다." %echo) #소수점 이하 짤림
print ("올해의 경제성장률은 (%.2f) 입니다." %echo) # (.nf)=> n의 자리만큼 출력, 반올림
print ("올해의 경제성장률은 (%10.2f) 입니다." %echo) # 앞의 자리수중 전체 자리수, 음수일시 왼쪽부터 정렬
print ("올해의 경제성장률은 (%-10.2f) 입니다." %echo) 
print ("올해의 경제성장률은 (%-10f) 입니다." %echo)# 전체자리수출력

#%%

정수=655
print ("정수 테스트 (%-6d)"%정수)# 나머진 위의 사용법 참조


#%%
#한글은 2자리를 차지하지만 한 문자를 처리

s="문자열정렬"
print("(%10s)"%s)
print("(%10s)"%s)
print("(%10s)"%s)

#%%
"""
f문자열 로도 정렬가능
"""
a = "콜라사이다"

print(f"{a:<20}")
print(f"{a:^20}")
print(f"{a:>20}")


#%%

"""
문자열 함수: "~~~~~".함수()

문제: 문자열을 연속해서 어떻게 찾을 수 있는가?
문자열 변수 s에서 지정한 문자열을 찾아라

다음 문자열에서 t 를 찾아라
"""

r="01234567890123456789012345678901234567890123456789"
s= "Python is the best choice"
findstr="t"
print("답: ", f"{s}".count("t"))


#%% 
"""
문자열 삽입
결과 = 삽입할 문자열.join(원본 문자열)
원본 문자열의 각 문자들 사이에 문자열을 삽입
"""
s="abcdefg"
t= ','.join(s)
print(t)
"""
리스트를 결합해서 문자열로 만든다고 보면 됨

"""
tel =["010","1234","5678"]
cst = '-'.join(tel)
print (cst)

"""
분할: splite()
"""
#%%

s1:list = ["우등생", "100", "100", "100", "100", "400"]
s2:list = ["이등생", "90", "90", "95", "90", "362"]
s3:list = ["삼등생", "89", "88", "85", "83", "345"]
hd:list = ["이름", "국어", "영어", "수학","과학", "총점"]
m1:list = ["홍길동", "34", "89.5", "96","100","333.5"]


# if m1[1] == s1[1]:   print(f"{m1[0]}님의 {hd[1]}성적: {s1[0]}")                      
# elif m1[1] > s2[1]:  print(f"{m1[0]}님의 {hd[1]}성적: {s2[0]}")   
# else : print(f"{m1[0]}님의 {hd[1]}성적: {s3[0]}")
        

print(m1[1])

for i in range(1,len(m1)):
        if m1[i] == s1[i]:   print(f"{m1[0]}님의 {hd[i]}성적: {s1[0]}")                      
        elif m1[i] > s2[i]:  print(f"{m1[0]}님의 {hd[i]}성적: {s2[0]}")   
        elif m1[i] > s3[i]:  print(f"{m1[0]}님의 {hd[i]}성적: {s3[0]}") 
        else : print(f"{m1[0]}님의 {hd[i]}성적: {s3[0]} 이하")

#%%
sl:list = ["우등생", [80, 90, 100 ], 0.0 , 0.0]

sc = sl[1]


sl[-2] = sc[0] + sc[1] + sc[2]

sl[-1]  = sl[-2]/3.0




print ("전체 :", sl) 
print ("총점 :", sl[-2])

"""
리스트 카피따다가 오류나면 누가 원본 훼손-보통은 나-한 것일 확률 높음

"""

#%%


a = [1,2,3]
b=[4,5,6]
c=a+b

print (a, b, c)


























